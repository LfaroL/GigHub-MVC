@using GigHub.Controllers
@model GigHub.ViewModels.GigFormViewModel
@{
    ViewBag.Title = "Create";
}

<h2>Add a Gig</h2>

@* Target Action = Create, Controller = GigsController *@
@using (Html.BeginForm("Create", "Gigs"))
{
    <p class="alert alert-info">All fields are <strong>required</strong>.</p>

    @Html.AntiForgeryToken()
    <div class="form-group">
        @* Lambda Expression: m for model *@

        @* m goes to Venue *@
        @Html.LabelFor(m => m.Venue)

        @* use anonymous object to add new class *@                 @* Set autofocus *@
        @Html.TextBoxFor(m => m.Venue, new { @class = "form-control", autofocus = "autofocus" }) 

        @Html.ValidationMessageFor(m => m.Venue)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Date)
        @Html.TextBoxFor(m => m.Date, new { @class = "form-control", placeholder="E.g. 21 Jan 2017" })
        @Html.ValidationMessageFor(m => m.Date)


    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Time)
        @Html.TextBoxFor(m => m.Time, new { @class = "form-control", placeholder = "E.g. 18:30" })
        @Html.ValidationMessageFor(m => m.Time)


    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Genre)
                                                                @* Data Value, Data Text *@
        @Html.DropDownListFor(m => m.Genre, new SelectList(Model.Genres, "Id", "Name"), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Genre)


    </div>

    <button type="submit" class="btn btn-primary">Save</button>
}

@* Add code to scripts section
    Do not add before jQuery otherwise no jQuery definition
   Render jqueryval for client-side validation *@
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}